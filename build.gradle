buildscript {
    ext {
        restdocsApiSpecVersion = '0.19.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'eora21'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
    swaggerUI 'org.webjars:swagger-ui:5.15.1'
}

clean {
    delete file("src/main/resources/static/docs/")
}

openapi3 {
    server = "http://localhost:8080"
    title = "Holiday Keeper API"
    description = "Holiday Keeper API description"
    version = "0.1.0"
    format = "json"
}

swaggerSources {
    sample {
        setInputFile(file("${openapi3.outputDirectory}/openapi3.json"))
    }
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn "openapi3"
}

tasks.register("copySwaggerUISample") {
    doLast {
        copy {
            from("${generateSwaggerUISample.outputDir}")
            into("src/main/resources/static/docs/")
        }
    }
}

bootJar {
    dependsOn generateSwaggerUISample
    finalizedBy copySwaggerUISample
}

tasks.named('test') {
    useJUnitPlatform()
}
